<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" ignored="0"
	total="6" passed="4">
	<reporter-output>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
		<line>
      <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
		</line>
	</reporter-output>
	<suite name="Suite" duration-ms="372262"
		started-at="2023-10-13T16:20:24 IST"
		finished-at="2023-10-13T16:26:36 IST">
		<groups>
		</groups>
		<test name="Test" duration-ms="227940"
			started-at="2023-10-13T16:20:24 IST"
			finished-at="2023-10-13T16:24:12 IST">
			<class
				name="com.evs.vtiger.testcases.ValidateLeadsFunctionality">
				<test-method status="PASS"
					signature="beforeTestCaseClass(java.lang.String)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="beforeTestCaseClass" is-config="true" duration-ms="85544"
					started-at="2023-10-13T16:20:24 IST"
					finished-at="2023-10-13T16:21:50 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[Chrome]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- beforeTestCaseClass -->
				<test-method status="PASS"
					signature="beforTestcase(java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="beforTestcase" is-config="true" duration-ms="21981"
					started-at="2023-10-13T16:21:50 IST"
					finished-at="2023-10-13T16:22:12 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt001validateLogin()]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- beforTestcase -->
				<test-method status="PASS"
					signature="vt001validateLogin()[pri:-1, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="vt001validateLogin" duration-ms="126"
					started-at="2023-10-13T16:22:12 IST"
					finished-at="2023-10-13T16:22:12 IST">
					<reporter-output>
					</reporter-output>
				</test-method> <!-- vt001validateLogin -->
				<test-method status="PASS"
					signature="afterTestCase(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="afterTestCase" is-config="true" duration-ms="4223"
					started-at="2023-10-13T16:22:12 IST"
					finished-at="2023-10-13T16:22:16 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[[TestResult name=vt001validateLogin status=SUCCESS method=ValidateLeadsFunctionality.vt001validateLogin()[pri:-1, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d] output={null}]]]>
							</value>
						</param>
						<param index="1">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt001validateLogin()]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- afterTestCase -->
				<test-method status="PASS"
					signature="beforTestcase(java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="beforTestcase" is-config="true" duration-ms="4177"
					started-at="2023-10-13T16:22:16 IST"
					finished-at="2023-10-13T16:22:20 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt002validateCreateLeads() throws java.io.IOException]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- beforTestcase -->
				<test-method status="PASS"
					signature="vt002validateCreateLeads()[pri:1, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="vt002validateCreateLeads" duration-ms="105766"
					started-at="2023-10-13T16:22:20 IST"
					finished-at="2023-10-13T16:24:06 IST">
					<reporter-output>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
					</reporter-output>
				</test-method> <!-- vt002validateCreateLeads -->
				<test-method status="PASS"
					signature="afterTestCase(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="afterTestCase" is-config="true" duration-ms="2198"
					started-at="2023-10-13T16:24:06 IST"
					finished-at="2023-10-13T16:24:08 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[[TestResult name=vt002validateCreateLeads status=SUCCESS method=ValidateLeadsFunctionality.vt002validateCreateLeads()[pri:1, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d] output=Validation Passed. Where actual -Yadav & Expected -Yadav]]]>
							</value>
						</param>
						<param index="1">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt002validateCreateLeads() throws java.io.IOException]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- afterTestCase -->
				<test-method status="FAIL"
					signature="beforTestcase(java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="beforTestcase" is-config="true" duration-ms="3843"
					started-at="2023-10-13T16:24:08 IST"
					finished-at="2023-10-13T16:24:12 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt003validateDeleteLead() throws java.io.IOException]]>
							</value>
						</param>
					</params>
					<exception class="java.lang.NullPointerException">
						<full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.evs.vtiger.exceldata.ExcelDataUtil.getTestCaseData(ExcelDataUtil.java:96)
at com.evs.vtiger.testcases.Basetest.beforTestcase(Basetest.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
						</full-stacktrace>
					</exception> <!-- java.lang.NullPointerException -->
					<reporter-output>
					</reporter-output>
				</test-method> <!-- beforTestcase -->
				<test-method status="SKIP"
					signature="vt003validateDeleteLead()[pri:2, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="vt003validateDeleteLead" duration-ms="0"
					started-at="2023-10-13T16:24:12 IST"
					finished-at="2023-10-13T16:24:12 IST">
					<exception class="java.lang.NullPointerException">
						<full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.evs.vtiger.exceldata.ExcelDataUtil.getTestCaseData(ExcelDataUtil.java:96)
at com.evs.vtiger.testcases.Basetest.beforTestcase(Basetest.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
						</full-stacktrace>
					</exception> <!-- java.lang.NullPointerException -->
					<reporter-output>
					</reporter-output>
				</test-method> <!-- vt003validateDeleteLead -->
				<test-method status="SKIP"
					signature="afterTestCase(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="afterTestCase" is-config="true" duration-ms="-1697194452636"
					started-at="2023-10-13T16:24:12 IST"
					finished-at="1970-01-01T05:30:00 IST">
					<reporter-output>
					</reporter-output>
				</test-method> <!-- afterTestCase -->
				<test-method status="SKIP"
					signature="afterTestCaseClass()[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@3cef309d]"
					name="afterTestCaseClass" is-config="true"
					duration-ms="-1697194452639" started-at="2023-10-13T16:24:12 IST"
					finished-at="1970-01-01T05:30:00 IST">
					<reporter-output>
					</reporter-output>
				</test-method> <!-- afterTestCaseClass -->
			</class> <!-- com.evs.vtiger.testcases.ValidateLeadsFunctionality -->
		</test> <!-- Test -->
		<test name="Test1" duration-ms="372262"
			started-at="2023-10-13T16:20:24 IST"
			finished-at="2023-10-13T16:26:36 IST">
			<class
				name="com.evs.vtiger.testcases.ValidateLeadsFunctionality">
				<test-method status="PASS"
					signature="beforeTestCaseClass(java.lang.String)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="beforeTestCaseClass" is-config="true" duration-ms="263558"
					started-at="2023-10-13T16:20:24 IST"
					finished-at="2023-10-13T16:24:48 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[edge]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- beforeTestCaseClass -->
				<test-method status="PASS"
					signature="beforTestcase(java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="beforTestcase" is-config="true" duration-ms="8071"
					started-at="2023-10-13T16:24:48 IST"
					finished-at="2023-10-13T16:24:56 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt001validateLogin()]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- beforTestcase -->
				<test-method status="PASS"
					signature="vt001validateLogin()[pri:-1, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="vt001validateLogin" duration-ms="466"
					started-at="2023-10-13T16:24:56 IST"
					finished-at="2023-10-13T16:24:56 IST">
					<reporter-output>
					</reporter-output>
				</test-method> <!-- vt001validateLogin -->
				<test-method status="PASS"
					signature="afterTestCase(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="afterTestCase" is-config="true" duration-ms="3464"
					started-at="2023-10-13T16:24:56 IST"
					finished-at="2023-10-13T16:25:00 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[[TestResult name=vt001validateLogin status=SUCCESS method=ValidateLeadsFunctionality.vt001validateLogin()[pri:-1, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542] output={null}]]]>
							</value>
						</param>
						<param index="1">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt001validateLogin()]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- afterTestCase -->
				<test-method status="PASS"
					signature="beforTestcase(java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="beforTestcase" is-config="true" duration-ms="4949"
					started-at="2023-10-13T16:25:00 IST"
					finished-at="2023-10-13T16:25:05 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt002validateCreateLeads() throws java.io.IOException]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- beforTestcase -->
				<test-method status="PASS"
					signature="vt002validateCreateLeads()[pri:1, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="vt002validateCreateLeads" duration-ms="86082"
					started-at="2023-10-13T16:25:05 IST"
					finished-at="2023-10-13T16:26:31 IST">
					<reporter-output>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
						<line>
              <![CDATA[Validation Passed. Where actual -Yadav & Expected -Yadav]]>
						</line>
					</reporter-output>
				</test-method> <!-- vt002validateCreateLeads -->
				<test-method status="PASS"
					signature="afterTestCase(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="afterTestCase" is-config="true" duration-ms="1856"
					started-at="2023-10-13T16:26:31 IST"
					finished-at="2023-10-13T16:26:33 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[[TestResult name=vt002validateCreateLeads status=SUCCESS method=ValidateLeadsFunctionality.vt002validateCreateLeads()[pri:1, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542] output=Validation Passed. Where actual -Yadav & Expected -Yadav]]]>
							</value>
						</param>
						<param index="1">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt002validateCreateLeads() throws java.io.IOException]]>
							</value>
						</param>
					</params>
					<reporter-output>
					</reporter-output>
				</test-method> <!-- afterTestCase -->
				<test-method status="FAIL"
					signature="beforTestcase(java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="beforTestcase" is-config="true" duration-ms="3777"
					started-at="2023-10-13T16:26:33 IST"
					finished-at="2023-10-13T16:26:36 IST">
					<params>
						<param index="0">
							<value>
                <![CDATA[public void com.evs.vtiger.testcases.ValidateLeadsFunctionality.vt003validateDeleteLead() throws java.io.IOException]]>
							</value>
						</param>
					</params>
					<exception class="java.lang.NullPointerException">
						<full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.evs.vtiger.exceldata.ExcelDataUtil.getTestCaseData(ExcelDataUtil.java:96)
at com.evs.vtiger.testcases.Basetest.beforTestcase(Basetest.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
						</full-stacktrace>
					</exception> <!-- java.lang.NullPointerException -->
					<reporter-output>
					</reporter-output>
				</test-method> <!-- beforTestcase -->
				<test-method status="SKIP"
					signature="afterTestCase(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="afterTestCase" is-config="true" duration-ms="-1697194596959"
					started-at="2023-10-13T16:26:36 IST"
					finished-at="1970-01-01T05:30:00 IST">
					<reporter-output>
					</reporter-output>
				</test-method> <!-- afterTestCase -->
				<test-method status="SKIP"
					signature="vt003validateDeleteLead()[pri:2, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="vt003validateDeleteLead" duration-ms="0"
					started-at="2023-10-13T16:26:36 IST"
					finished-at="2023-10-13T16:26:36 IST">
					<exception class="java.lang.NullPointerException">
						<full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.evs.vtiger.exceldata.ExcelDataUtil.getTestCaseData(ExcelDataUtil.java:96)
at com.evs.vtiger.testcases.Basetest.beforTestcase(Basetest.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
						</full-stacktrace>
					</exception> <!-- java.lang.NullPointerException -->
					<reporter-output>
					</reporter-output>
				</test-method> <!-- vt003validateDeleteLead -->
				<test-method status="SKIP"
					signature="afterTestCaseClass()[pri:0, instance:com.evs.vtiger.testcases.ValidateLeadsFunctionality@5a1c0542]"
					name="afterTestCaseClass" is-config="true"
					duration-ms="-1697194596960" started-at="2023-10-13T16:26:36 IST"
					finished-at="1970-01-01T05:30:00 IST">
					<reporter-output>
					</reporter-output>
				</test-method> <!-- afterTestCaseClass -->
			</class> <!-- com.evs.vtiger.testcases.ValidateLeadsFunctionality -->
		</test> <!-- Test1 -->
	</suite> <!-- Suite -->
</testng-results>
